<ProxyEndpoint name="default">
    <FaultRules>
      <FaultRule name="no_api_key">
        <Step>
          <Name>AssignMessage.NoApiKeyErrorResponse</Name>
        </Step>
        <Condition>oauth.v2.FailedToResolveAPIKey</Condition>
      </FaultRule>
      <FaultRule name="invalid_api_key">
        <Step>
          <Name>ExtractVariables.VerifyApiKeyFaultString</Name>
        </Step>
        <Step>
          <Name>AssignMessage.BadApiKeyErrorResponse</Name>
        </Step>
        <Condition>(oauthV2.VerifyApiKey.FromHeader.failed)</Condition>
      </FaultRule>
    </FaultRules>
    <Flows>
      <Flow name="OptionsPreFlight">
        <Request/>
        <Response>
        <Step>
            <Name>AssignMessage.AddCors</Name>
          </Step>
        </Response>
        <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
      </Flow>
    </Flows>
    <PreFlow name="PreFlow">
      <Request>
        <Step>
          <Name>VerifyApiKey.FromHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.RemoveApiKeyHeader</Name>
        </Step>
      </Request>
    </PreFlow>
    <PostClientFlow/>
    <HTTPProxyConnection>
      <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
      <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="NoRoute">
      <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
    </RouteRule>
    <RouteRule name="upstream">
        <TargetEndpoint>upstream</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>
